<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sdp.biz.repository.SdpHistoryMapper">
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id,
    workspace_name,
    `table_name`,
    update_time,
    remark
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.sdp.biz.domain.SdpHistoryExample" resultType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    select
    <if test="topClause != null">
      top ${topClause}
    </if>
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    t.*
    from sdp_history t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitClause != null">
      limit ${limitClause}
    </if>
    <if test="limitClause != null and countClause != null">
      , ${countClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.sdp.biz.domain.SdpHistoryExample" resultType="cn.sdp.biz.domain.SdpHistory">
    select
    <if test="topClause != null">
      top ${topClause}
    </if>
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sdp_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitClause != null">
      limit ${limitClause}
    </if>
    <if test="limitClause != null and countClause != null">
      , ${countClause}
    </if>
  </select>
  <select id="countByExample" parameterType="cn.sdp.biz.domain.SdpHistoryExample" resultType="Integer">
    select
    count(*)
    from sdp_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="listWithoutBLOBs" parameterType="cn.sdp.biz.domain.SdpHistory" resultType="cn.sdp.biz.domain.SdpHistory">
    select
    <include refid="Base_Column_List" />
    from sdp_history
    where 88=88
    <if test="id != null">
    and id = #{id}
    </if>
    <if test="workspaceName != null">
    and workspace_name = #{workspaceName}
    </if>
    <if test="tableName != null">
    and table_name = #{tableName}
    </if>
    <if test="updateTime != null">
    and update_time = #{updateTime}
    </if>
    <if test="remark != null">
    and remark = #{remark}
    </if>
  </select>
  <select id="listWithBLOBs" parameterType="cn.sdp.biz.domain.SdpHistoryWithBLOBs" resultType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    select
    t.*
    from sdp_history t
    where 88=88
    <if test="content != null">
    and content = #{content}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="cn.sdp.biz.domain.SdpHistory">
    select
    <include refid="Base_Column_List" />
    from sdp_history
    where id = #{id}
  </select>
  <select id="selectByPrimaryKeyWithBLOBs" parameterType="java.lang.Integer" resultType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    select
    *
    from sdp_history
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sdp_history
    where id = #{id}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sdp.biz.domain.SdpHistoryExample">
    delete from sdp_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sdp.biz.domain.SdpHistory">
    insert into sdp_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
    id,
    workspace_name,
    `table_name`,
    update_time,
    remark,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
    #{id},
    #{workspaceName},
    #{tableName},
    #{updateTime},
    #{remark},
    </trim>
  </insert>
  <insert id="insertWithBLOBs" parameterType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    insert into sdp_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
    id,
    workspace_name,
    `table_name`,
    update_time,
    remark,
    content,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
    #{id},
    #{workspaceName},
    #{tableName},
    #{updateTime},
    #{remark},
    #{content},
    </trim>
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="cn.sdp.biz.domain.SdpHistoryWithBLOBs" useGeneratedKeys="true">
    insert into sdp_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workspaceName != null">
        workspace_name,
      </if>
      <if test="tableName != null">
        `table_name`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="workspaceName != null">
        #{workspaceName},
      </if>
      <if test="tableName != null">
        #{tableName},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
      <if test="content != null">
        #{content},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update sdp_history
    <set>
      <if test="record.id != null">
        id = #{record.id},
      </if>
      <if test="record.workspaceName != null">
        workspace_name = #{record.workspaceName},
      </if>
      <if test="record.tableName != null">
        `table_name` = #{record.tableName},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sdp_history
    <set>
      id = #{record.id},
      workspace_name = #{record.workspaceName},
      `table_name` = #{record.tableName},
      update_time = #{record.updateTime},
      remark = #{record.remark},
      content = #{record.content},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sdp_history
    <set>
      id = #{record.id},
      workspace_name = #{record.workspaceName},
      `table_name` = #{record.tableName},
      update_time = #{record.updateTime},
      remark = #{record.remark},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    update sdp_history
    <set>
        <if test="workspaceName != null">
          workspace_name = #{workspaceName},
        </if>
        <if test="tableName != null">
          `table_name` = #{tableName},
        </if>
        <if test="updateTime != null">
          update_time = #{updateTime},
        </if>
        <if test="remark != null">
          remark = #{remark},
        </if>
        <if test="content != null">
          content = #{content},
        </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.sdp.biz.domain.SdpHistoryWithBLOBs">
    update sdp_history
    <set>
	    workspace_name = #{workspaceName},
	    `table_name` = #{tableName},
	    update_time = #{updateTime},
	    remark = #{remark},
	    content = #{content},
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sdp.biz.domain.SdpHistory">
    update sdp_history
    <set>
		workspace_name = #{workspaceName},
		`table_name` = #{tableName},
		update_time = #{updateTime},
		remark = #{remark},
    </set>
    where id = #{id}
  </update>
</mapper>
